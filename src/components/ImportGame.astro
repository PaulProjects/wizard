<dialog id="modal_import" class="modal modal-top sm:modal-middle">
    <form method="dialog" class="modal-box">
        <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
            >âœ•</button
        >
        <div class="flex flex-col justify-center items-center">
            <h2 class="font-bold text-3xl mt-5">Import</h2>
            <label for="import_file">
                Importing data will add the saved past games from the file to
                your current past games and optinally overwrite the current game
                with the one in the file. The file should look like this:
                wizard_game.json
            </label>
            <div class="pb-5"></div>
            <div class="form-control pl-3">
                <label
                    class="cursor-pointer label"
                    for="overwrite_current_game"
                >
                    <input
                        type="checkbox"
                        aria-label="Button to overwrite the current game"
                        class="checkbox checkbox-secondary pr-3"
                        id="overwrite_current_game"
                    />
                    <span class="pl-3">Overwrite the current game?</span>
                </label>
            </div>
            <div class="pb-5"></div>
            <input
                type="file"
                id="import_file"
                class="file-input file-input-bordered w-full max-w-xs"
            />
            <button class="btn btn-info btn-block mt-5" id="rimport">
                Import
            </button>
            <button class="btn btn-info btn-block mt-2"> Cancel</button>
        </div>
    </form>
    <form method="dialog" class="modal-backdrop">
        <button>close</button>
    </form>
</dialog>
<!-- End of Import modal -->

<script>
    document.querySelectorAll(".import_data").forEach((element) => {
        element.addEventListener("click", function () {
            (
                document.getElementById("modal_import") as HTMLDialogElement
            ).open = true;
        });
    });

    document.getElementById("rimport").addEventListener("click", () => {
        let file = (document.getElementById("import_file") as HTMLInputElement)
            .files[0];
        if (file) {
            let reader = new FileReader();
            reader.readAsText(file, "UTF-8");
            reader.onload = function (evt) {
                try {
                    let didsomething = false;
                    let data = JSON.parse(evt.target.result as string);
                    let past_games = JSON.parse(
                        localStorage.getItem("recent_games"),
                    );
                    Object.keys(data).forEach(function (k) {
                        if (k == "recent_games") {
                            try {
                                //loop over the array and add the games to past_games if they are not already in there compare by time_started and time_ended
                                let new_games = JSON.parse(data[k]);
                                if (!past_games) past_games = [];
                                for (let i = 0; i < new_games.length; i++) {
                                    let pgame = new_games[i];
                                    let exists = false;
                                    for (
                                        let j = 0;
                                        j < past_games.length;
                                        j++
                                    ) {
                                        if (
                                            pgame.time_started ==
                                                past_games[j].time_started &&
                                            pgame.time_ended ==
                                                past_games[j].time_ended
                                        ) {
                                            exists = true;
                                        }
                                    }
                                    if (!exists) {
                                        past_games.push(pgame);
                                        didsomething = true;
                                    }
                                }
                                localStorage.setItem(
                                    "recent_games",
                                    JSON.stringify(past_games),
                                );
                            } catch (e) {
                                try { (window as any)['wizardLogger']?.warn?.('Failed to merge past games', { error: String(e) }); } catch {}
                            }
                        } else if (k == "game") {
                            if (
                                (
                                    document.getElementById(
                                        "overwrite_current_game",
                                    ) as HTMLInputElement
                                ).checked
                            ) {
                                localStorage.setItem("game", data[k]);
                                didsomething = true;
                            }
                        }
                    });
                    if (didsomething) {
                        location.reload();
                    } else {
                        alert("No new games found in the file!");
                    }
                } catch (e) {
                    alert("Error reading file!");
                }
            };
            reader.onerror = function (evt) {
                alert("Error reading file");
            };
        }
    });

    let export_data = document.getElementById("export_data");
    if (export_data) {
        export_data.addEventListener("click", () => {
            let data = JSON.stringify(localStorage);
            let blob = new Blob([data], { type: "text/plain" });
            let url = window.URL.createObjectURL(blob);
            let a = document.createElement("a");
            a.href = url;
            a.download = "wizard_game.json";
            a.click();
        });
    }
</script>
